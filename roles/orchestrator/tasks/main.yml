---
#
# orchestrator.yml - Playbook to install and configure proxysql
#


- name: Install Orchestrator dependencies
  ansible.builtin.apt:
    name: [ 'libonig5', 
            'libjq1', 
            'jq' ]
    state: present
  when: ansible_hostname == "orchestrator"


- name: Download Orchestrator with checksum (sha256)
  ansible.builtin.get_url:
    url: https://github.com/openark/orchestrator/releases/download/v3.2.6/orchestrator_3.2.6_amd64.deb
    dest: /tmp/orchestrator_3.2.6_amd64.deb
    checksum: sha256:4ef96ed8576ace00e0bba032c7c11e36e8011751a8b4baf0c4b095b87415625b
    mode: '0644'
    force: true
  when: ansible_hostname == "orchestrator"

- name: Build Orchestrator config file
  ansible.builtin.template:
    src: templates/orchestrator.conf.json.j2
    dest: /etc/orchestrator.conf.json
    owner: root
    group: root
    mode: 0644
  tags: b2
  when: ansible_hostname == "orchestrator"

- name: Install Orchestrator
  ansible.builtin.apt:
    deb: /tmp/orchestrator_3.2.6_amd64.deb
    state: present
  when: ansible_hostname == "orchestrator"
  
- name: Download Orchestrator Client with checksum (sha256)
  ansible.builtin.get_url:
    url: https://github.com/openark/orchestrator/releases/download/v3.2.6/orchestrator-client_3.2.6_amd64.deb
    dest: /tmp/orchestrator-client_3.2.6_amd64.deb
    checksum: sha256:53b5bc59fe94850163e84a0eacf035c5a82a1c1eb7e957894da81492e4f0e232
    mode: '0644'
    force: true
  when: ansible_hostname == "orchestrator"

- name: Install Orchestrator Client
  ansible.builtin.apt:
    deb: /tmp/orchestrator-client_3.2.6_amd64.deb
    state: present
  when: ansible_hostname == "orchestrator"

- name: Create a new database for Orchestrator
  community.mysql.mysql_db:
    name: orchestrator
    state: present
    login_user: root
    login_password: "{{ mysql_root_pass }}"
  tags: db
  when: ansible_hostname == "orchestrator"

- name: Create the Orchestrator User
  community.mysql.mysql_user:
      name: orchestrator
      password: "{{ orchestrator_hash }}"
      encrypted: yes
      priv: "*.*:SUPER,PROCESS,REPLICATION SLAVE,RELOAD/mysql.slave_master_info:SELECT/orchestrator.*:ALL"
      host: "{{ item }}"
      login_user: root
      login_password: "{{ mysql_root_pass }}"
      state: present
  loop:
    - "{{ host_subnet }}"
    - "{{ host_subnet2 }}"
  tags: user
  when: ansible_hostname == "orchestrator"
  notify:
    - Start Orchestrator
    - Restart Orchestrator

- name: Start Orchestrator2
  ansible.builtin.command: 
    service orchestrator start